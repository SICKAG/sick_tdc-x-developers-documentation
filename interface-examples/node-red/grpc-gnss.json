[
    {
        "id": "0c9e5911ac6da0c4",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6d9cf5240c4e103d",
        "type": "group",
        "z": "0c9e5911ac6da0c4",
        "name": "",
        "style": {
            "stroke": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "efea81f5895af103",
            "010bf3f658b11b0f",
            "d62fbadfd28fe894",
            "feb61ee6de4dd246",
            "ec366bfc091ee106",
            "b6afc8e3d4b6bdf8",
            "459b05b1cebc9320",
            "3215ec10db1f01da",
            "78272ebb1e2f34d9"
        ],
        "x": 74,
        "y": 119,
        "w": 932,
        "h": 222
    },
    {
        "id": "e35b87bfc6e155c2",
        "type": "group",
        "z": "0c9e5911ac6da0c4",
        "name": "",
        "style": {
            "stroke": "#6f2fa0",
            "label": true
        },
        "nodes": [
            "7365b39b0c8fa210",
            "6395ccbc796f9af8",
            "86664ab31d1c6eee",
            "10881a52ae27404d",
            "fa3eb41ce30e6fb8"
        ],
        "x": 754,
        "y": 519,
        "w": 712,
        "h": 142
    },
    {
        "id": "eef8bbb5561f64e9",
        "type": "group",
        "z": "0c9e5911ac6da0c4",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#6f2fa0"
        },
        "nodes": [
            "2cc0dbd209e98010",
            "cec18ca1ab2f3476",
            "af7abf9fd26d4730",
            "6fbbc8aa28a1f7df",
            "d6b1b4e1d26b78db",
            "a69a395495237353"
        ],
        "x": 74,
        "y": 519,
        "w": 652,
        "h": 222
    },
    {
        "id": "97a2cc1d5a7db0d0",
        "type": "group",
        "z": "0c9e5911ac6da0c4",
        "name": "",
        "style": {
            "stroke": "#6f2fa0",
            "label": true
        },
        "nodes": [
            "0441828e8cda464d",
            "89ad50a1f8333518",
            "89223ade31ee56f7",
            "98a1a0a7407b5eae",
            "0161acd77b52143b"
        ],
        "x": 74,
        "y": 359,
        "w": 772,
        "h": 142
    },
    {
        "id": "efea81f5895af103",
        "type": "inject",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "send-login-data",
        "props": [
            {
                "p": "payload.username",
                "v": "admin",
                "vt": "str"
            },
            {
                "p": "payload.password",
                "v": "password",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "010bf3f658b11b0f"
            ]
        ]
    },
    {
        "id": "010bf3f658b11b0f",
        "type": "function",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "prepare-payload",
        "func": "var username = msg.payload.username;\nvar password = msg.payload.password;\n\nmsg.payload = {\n    \"username\": \"username\",\n    \"password\": \"password\",\n    \"realm\": \"admin\"\n};\n\nmsg.headers = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 220,
        "wires": [
            [
                "d62fbadfd28fe894"
            ]
        ]
    },
    {
        "id": "d62fbadfd28fe894",
        "type": "http request",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "send-request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.0.100/auth/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "feb61ee6de4dd246",
                "ec366bfc091ee106"
            ]
        ]
    },
    {
        "id": "feb61ee6de4dd246",
        "type": "debug",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 220,
        "wires": []
    },
    {
        "id": "ec366bfc091ee106",
        "type": "function",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "set-flow-token",
        "func": "let token = msg.payload.token;\nflow.set('token', token);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "b6afc8e3d4b6bdf8"
            ]
        ]
    },
    {
        "id": "b6afc8e3d4b6bdf8",
        "type": "debug",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "token-ok",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 300,
        "wires": []
    },
    {
        "id": "459b05b1cebc9320",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "Make token request",
        "info": "",
        "x": 890,
        "y": 160,
        "wires": []
    },
    {
        "id": "3215ec10db1f01da",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "Set login data here",
        "info": "",
        "x": 190,
        "y": 160,
        "wires": []
    },
    {
        "id": "78272ebb1e2f34d9",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "6d9cf5240c4e103d",
        "name": "Set IP address",
        "info": "",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "2cc0dbd209e98010",
        "type": "inject",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"enableReciever\":true, \"enableAntenna\":true}",
        "payloadType": "json",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "d6b1b4e1d26b78db"
            ]
        ]
    },
    {
        "id": "cec18ca1ab2f3476",
        "type": "debug",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 660,
        "wires": []
    },
    {
        "id": "af7abf9fd26d4730",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "set Device Status",
        "info": "",
        "x": 180,
        "y": 560,
        "wires": []
    },
    {
        "id": "6fbbc8aa28a1f7df",
        "type": "inject",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"enableReciever\":false, \"enableAntenna\":false}",
        "payloadType": "json",
        "x": 170,
        "y": 700,
        "wires": [
            [
                "d6b1b4e1d26b78db"
            ]
        ]
    },
    {
        "id": "d6b1b4e1d26b78db",
        "type": "function",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "authorize",
        "func": "msg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 660,
        "wires": [
            [
                "a69a395495237353"
            ]
        ]
    },
    {
        "id": "a69a395495237353",
        "type": "grpc-call",
        "z": "0c9e5911ac6da0c4",
        "g": "eef8bbb5561f64e9",
        "name": "",
        "server": "cbb25c4756c1a815",
        "service": "Gnss",
        "method": "SetDeviceStatus",
        "chain": "",
        "key": "",
        "x": 470,
        "y": 660,
        "wires": [
            [
                "cec18ca1ab2f3476"
            ]
        ]
    },
    {
        "id": "0441828e8cda464d",
        "type": "grpc-call",
        "z": "0c9e5911ac6da0c4",
        "g": "97a2cc1d5a7db0d0",
        "name": "",
        "server": "cbb25c4756c1a815",
        "service": "Gnss",
        "method": "GetDeviceStatus",
        "chain": "",
        "key": "",
        "x": 550,
        "y": 460,
        "wires": [
            [
                "89223ade31ee56f7"
            ]
        ]
    },
    {
        "id": "89ad50a1f8333518",
        "type": "inject",
        "z": "0c9e5911ac6da0c4",
        "g": "97a2cc1d5a7db0d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "0161acd77b52143b"
            ]
        ]
    },
    {
        "id": "89223ade31ee56f7",
        "type": "debug",
        "z": "0c9e5911ac6da0c4",
        "g": "97a2cc1d5a7db0d0",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "98a1a0a7407b5eae",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "97a2cc1d5a7db0d0",
        "name": "get Device Status",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "0161acd77b52143b",
        "type": "function",
        "z": "0c9e5911ac6da0c4",
        "g": "97a2cc1d5a7db0d0",
        "name": "authorize",
        "func": "msg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 460,
        "wires": [
            [
                "0441828e8cda464d"
            ]
        ]
    },
    {
        "id": "7365b39b0c8fa210",
        "type": "inject",
        "z": "0c9e5911ac6da0c4",
        "g": "e35b87bfc6e155c2",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "iso",
        "payloadType": "date",
        "x": 860,
        "y": 620,
        "wires": [
            [
                "86664ab31d1c6eee"
            ]
        ]
    },
    {
        "id": "6395ccbc796f9af8",
        "type": "comment",
        "z": "0c9e5911ac6da0c4",
        "g": "e35b87bfc6e155c2",
        "name": "streaming JSON data",
        "info": "",
        "x": 880,
        "y": 560,
        "wires": []
    },
    {
        "id": "86664ab31d1c6eee",
        "type": "function",
        "z": "0c9e5911ac6da0c4",
        "g": "e35b87bfc6e155c2",
        "name": "authorize",
        "func": "msg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 620,
        "wires": [
            [
                "10881a52ae27404d"
            ]
        ]
    },
    {
        "id": "10881a52ae27404d",
        "type": "grpc-call",
        "z": "0c9e5911ac6da0c4",
        "g": "e35b87bfc6e155c2",
        "name": "",
        "server": "cbb25c4756c1a815",
        "service": "Gnss",
        "method": "StreamDataJson",
        "chain": "",
        "key": "",
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "fa3eb41ce30e6fb8"
            ]
        ]
    },
    {
        "id": "fa3eb41ce30e6fb8",
        "type": "debug",
        "z": "0c9e5911ac6da0c4",
        "g": "e35b87bfc6e155c2",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "cbb25c4756c1a815",
        "type": "grpc-server",
        "port": "8081",
        "name": "grpc-gnss",
        "server": "192.168.0.100",
        "protoFile": "/**\n * GNSS Service.\n *\n * Service for reading GNSS data\n */\n syntax = \"proto3\";\n\n package hal.gnss;\n \n import \"google/protobuf/empty.proto\";\n \n option go_package = \"./protos;protos\";\n\nenum NMEAFrequency {\n    _1Hz = 0;\n    _2Hz = 1;\n    _5Hz = 2;\n    _10Hz = 3;\n}\n\nmessage NMEAFrequenciesList {\n    repeated string frequencies = 1;\n}\n\nmessage NMEAFrequencySettings {\n    NMEAFrequency frequency = 1;\n}\n\nmessage GnssDataJson {\n    double latitude = 1;     // The latitude of the GNSS position in decimal degrees.\n    double longitude = 2;    // The longitude of the GNSS position in decimal degrees.\n    double altitude = 3;     // The altitude of the GNSS position in meters.\n    string timestamp = 4;    // The timestamp of the GNSS record in ISO 8601 format.\n    double speed_kph = 5;    // The speed of the object in kilometers per hour.\n    double speed_mph = 6;    // The speed of the object in miles per hour.\n    double course = 7;       // The direction of travel in degrees, where 0 is north.\n    double satellites = 8;   // The number of satellites used to determine the position.\n    double fix_type = 9;     // Indicates the type of GNSS fix (e.g., 1 for no fix, 2 for 2D fix, 3 for 3D fix).\n    double fix_quality = 10;  // Indicates the GNSS fix quality (e.g., 0 for invalid, 1 for GPS fix, 2 for DGPS fix).\n    double hdop = 11;        // The Horizontal Dilution of Precision, a measure of the GNSS signal's accuracy.\n}\n\nmessage GnssData{\n    string sentence = 1;\n}\n\nmessage DeviceManagementRequest {\n    bool enableReciever = 1;\n    bool enableAntenna = 2;\n}\n\nmessage DeviceManagementResponse {\n    bool enableReciever = 1;\n    bool enableAntenna = 2;\n    bool sessionActive = 3;\n    bool rebootRequired = 4;\n}\n\nmessage GnssConstellationsSettings {\n    bool GLONASS = 1;\n    bool BDS = 2;\n    bool Galileo = 3;\n}\n\nmessage GnssConstellations {\n    repeated string constellations = 1;\n}\n\n\n /**\n  * Service exposing GNSS functions.\n  */\n  service Gnss {\n    // Provides parsed Gnss data as JSON\n    rpc StreamDataJson(google.protobuf.Empty) returns (stream GnssDataJson) {}\n  \n    // Provides raw stream that is returned by the Gnss receiver\n    rpc StreamDataRaw(google.protobuf.Empty) returns (stream GnssData) {}\n\n    // Provides a way do get receiver and antenna status\n    rpc GetDeviceStatus(google.protobuf.Empty) returns (DeviceManagementResponse) {}\n  \n    // Provides a way do disable/enable receiver and antenna\n    rpc SetDeviceStatus(DeviceManagementRequest) returns (google.protobuf.Empty) {}\n  \n    // Provides a way to set preferred constellations\n    rpc SetConstellations(GnssConstellationsSettings) returns (google.protobuf.Empty) {}\n  \n    // Provides a way to get current preferred constellations\n    rpc GetConstellations(google.protobuf.Empty) returns (GnssConstellationsSettings) {}\n  \n    // Provides a way to get a list of available constellations\n    rpc ListAvailableConstellations(google.protobuf.Empty) returns (GnssConstellations) {}\n  \n    // Provides a way to set NMEA output frequency\n    rpc SetNmeaOutputFrequency(NMEAFrequencySettings) returns (google.protobuf.Empty) {}\n  \n    // Provides a way to set NMEA output frequency\n    rpc GetNmeaOutputFrequency(google.protobuf.Empty) returns (NMEAFrequencySettings) {}\n  \n    // Provides a way to get a list of available NMEA output frequencies\n    rpc ListNmeaOutputFrequencies(google.protobuf.Empty) returns (NMEAFrequenciesList) {}\n  }\n",
        "ca": "",
        "chain": "",
        "key": "",
        "mutualTls": false,
        "ssl": false,
        "selfsigned": false,
        "localServer": false
    }
]