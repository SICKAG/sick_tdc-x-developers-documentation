[
    {
        "id": "0be0f11d4673867d",
        "type": "tab",
        "label": "grpc-ain",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58d4e2a9bd74a9d1",
        "type": "group",
        "z": "0be0f11d4673867d",
        "name": "",
        "style": {
            "stroke": "#3f93cf",
            "label": true
        },
        "nodes": [
            "80c16d60341ae87f",
            "b12713462c32015a",
            "406e17aeee211979",
            "052f72f222d9fe17",
            "def0b92fc7148574"
        ],
        "x": 854,
        "y": 279,
        "w": 792,
        "h": 142
    },
    {
        "id": "11209279da3da0de",
        "type": "group",
        "z": "0be0f11d4673867d",
        "name": "",
        "style": {
            "stroke": "#bfdbef",
            "label": true
        },
        "nodes": [
            "163da86d8974fa0b",
            "b581ccf457c373c9",
            "558f674a8f04b3d0",
            "c53880980355abdc",
            "f7a4058828bf5f8a"
        ],
        "x": 54,
        "y": 279,
        "w": 792,
        "h": 142
    },
    {
        "id": "77518ee39b69cb93",
        "type": "group",
        "z": "0be0f11d4673867d",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#3f93cf"
        },
        "nodes": [
            "917b7d6ab1787b98",
            "8c314e300cdfbc4c",
            "c1f079f7c2aaf328",
            "15548bb3691fc6c3",
            "8366ae7fefb0357e",
            "fd140851983b75c0"
        ],
        "x": 54,
        "y": 439,
        "w": 772,
        "h": 222
    },
    {
        "id": "39b4d0e61074c9cc",
        "type": "group",
        "z": "0be0f11d4673867d",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "3ed991bfaca94f0e",
            "7ae45287c3119bcd",
            "710304bed2710f2d",
            "c6e7fdbdafeebf16",
            "5667975d8f2808f5"
        ],
        "x": 834,
        "y": 439,
        "w": 772,
        "h": 142
    },
    {
        "id": "2ae68259689f0b2f",
        "type": "group",
        "z": "0be0f11d4673867d",
        "name": "",
        "style": {
            "stroke": "#ff7f7f",
            "label": true
        },
        "nodes": [
            "f2d356988bd18f3a",
            "0c0cc2dd39d1b6c4",
            "6b3b415a0fa74a74",
            "30d5b75d6c492dc7",
            "79f3489971cfe45d",
            "497c063734445f84",
            "8429449099e08bb7",
            "fab98e53f8d557a4",
            "02059d80aabfcf9f"
        ],
        "x": 54,
        "y": 19,
        "w": 932,
        "h": 222
    },
    {
        "id": "b581ccf457c373c9",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "11209279da3da0de",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 380,
        "wires": []
    },
    {
        "id": "80c16d60341ae87f",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "58d4e2a9bd74a9d1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"AI_A\"}",
        "payloadType": "json",
        "x": 980,
        "y": 380,
        "wires": [
            [
                "def0b92fc7148574"
            ]
        ]
    },
    {
        "id": "b12713462c32015a",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "58d4e2a9bd74a9d1",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 380,
        "wires": []
    },
    {
        "id": "052f72f222d9fe17",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "58d4e2a9bd74a9d1",
        "name": "read AIN (A) state",
        "info": "",
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "558f674a8f04b3d0",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "11209279da3da0de",
        "name": "list AIN devices",
        "info": "",
        "x": 160,
        "y": 320,
        "wires": []
    },
    {
        "id": "917b7d6ab1787b98",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "Voltage",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"AI_A\", \"mode\":\"Voltage\"}",
        "payloadType": "json",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "fd140851983b75c0"
            ]
        ]
    },
    {
        "id": "8c314e300cdfbc4c",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 580,
        "wires": []
    },
    {
        "id": "15548bb3691fc6c3",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "change AIN (A) mode",
        "info": "",
        "x": 180,
        "y": 480,
        "wires": []
    },
    {
        "id": "8366ae7fefb0357e",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "Current",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\":\"AI_A\", \"mode\":\"Current\"}",
        "payloadType": "json",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "fd140851983b75c0"
            ]
        ]
    },
    {
        "id": "7ae45287c3119bcd",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "39b4d0e61074c9cc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 940,
        "y": 540,
        "wires": [
            [
                "5667975d8f2808f5"
            ]
        ]
    },
    {
        "id": "710304bed2710f2d",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "39b4d0e61074c9cc",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 540,
        "wires": []
    },
    {
        "id": "c6e7fdbdafeebf16",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "39b4d0e61074c9cc",
        "name": "streaming AIN changes",
        "info": "",
        "x": 960,
        "y": 480,
        "wires": []
    },
    {
        "id": "c53880980355abdc",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "11209279da3da0de",
        "name": "authorize",
        "func": "\nmsg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "163da86d8974fa0b"
            ]
        ]
    },
    {
        "id": "f7a4058828bf5f8a",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "11209279da3da0de",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "c53880980355abdc"
            ]
        ]
    },
    {
        "id": "f2d356988bd18f3a",
        "type": "inject",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "send-login-data",
        "props": [
            {
                "p": "payload.username",
                "v": "admin",
                "vt": "str"
            },
            {
                "p": "payload.password",
                "v": "password",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "0c0cc2dd39d1b6c4"
            ]
        ]
    },
    {
        "id": "0c0cc2dd39d1b6c4",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "prepare-payload",
        "func": "var username = msg.payload.username;\nvar password = msg.payload.password;\n\nmsg.payload = {\n    \"username\": username,\n    \"password\": password,\n    \"realm\": \"admin\"\n};\n\nmsg.headers = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "6b3b415a0fa74a74"
            ]
        ]
    },
    {
        "id": "6b3b415a0fa74a74",
        "type": "http request",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "send-request",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.0.100/auth/login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "30d5b75d6c492dc7",
                "79f3489971cfe45d"
            ]
        ]
    },
    {
        "id": "30d5b75d6c492dc7",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "79f3489971cfe45d",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "set-flow-token",
        "func": "let token = msg.payload.token;\nflow.set('token', token);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 200,
        "wires": [
            [
                "497c063734445f84"
            ]
        ]
    },
    {
        "id": "497c063734445f84",
        "type": "debug",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "token-ok",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "8429449099e08bb7",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "Make token request",
        "info": "",
        "x": 870,
        "y": 60,
        "wires": []
    },
    {
        "id": "fab98e53f8d557a4",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "Set login data here",
        "info": "",
        "x": 170,
        "y": 60,
        "wires": []
    },
    {
        "id": "02059d80aabfcf9f",
        "type": "comment",
        "z": "0be0f11d4673867d",
        "g": "2ae68259689f0b2f",
        "name": "Set IP address",
        "info": "",
        "x": 580,
        "y": 60,
        "wires": []
    },
    {
        "id": "163da86d8974fa0b",
        "type": "grpc-call",
        "z": "0be0f11d4673867d",
        "g": "11209279da3da0de",
        "name": "",
        "server": "74593a359e0d9d7f",
        "service": "AnalogIN",
        "method": "ListDevices",
        "chain": "",
        "key": "",
        "x": 530,
        "y": 380,
        "wires": [
            [
                "b581ccf457c373c9"
            ]
        ]
    },
    {
        "id": "406e17aeee211979",
        "type": "grpc-call",
        "z": "0be0f11d4673867d",
        "g": "58d4e2a9bd74a9d1",
        "name": "",
        "server": "74593a359e0d9d7f",
        "service": "AnalogIN",
        "method": "Read",
        "chain": "",
        "key": "",
        "x": 1350,
        "y": 380,
        "wires": [
            [
                "b12713462c32015a"
            ]
        ]
    },
    {
        "id": "c1f079f7c2aaf328",
        "type": "grpc-call",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "",
        "server": "74593a359e0d9d7f",
        "service": "AnalogIN",
        "method": "SetMeasureMode",
        "chain": "",
        "key": "",
        "x": 530,
        "y": 580,
        "wires": [
            [
                "8c314e300cdfbc4c"
            ]
        ]
    },
    {
        "id": "3ed991bfaca94f0e",
        "type": "grpc-call",
        "z": "0be0f11d4673867d",
        "g": "39b4d0e61074c9cc",
        "name": "",
        "server": "74593a359e0d9d7f",
        "service": "AnalogIN",
        "method": "Attach",
        "chain": "",
        "key": "",
        "x": 1310,
        "y": 540,
        "wires": [
            [
                "710304bed2710f2d"
            ]
        ]
    },
    {
        "id": "fd140851983b75c0",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "77518ee39b69cb93",
        "name": "authorize",
        "func": "\nmsg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 580,
        "wires": [
            [
                "c1f079f7c2aaf328"
            ]
        ]
    },
    {
        "id": "5667975d8f2808f5",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "39b4d0e61074c9cc",
        "name": "authorize",
        "func": "\nmsg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 540,
        "wires": [
            [
                "3ed991bfaca94f0e"
            ]
        ]
    },
    {
        "id": "def0b92fc7148574",
        "type": "function",
        "z": "0be0f11d4673867d",
        "g": "58d4e2a9bd74a9d1",
        "name": "authorize",
        "func": "\nmsg.metadata = {\n    \"Authorization\":\"Bearer \" + flow.get(\"token\")\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 380,
        "wires": [
            [
                "406e17aeee211979"
            ]
        ]
    },
    {
        "id": "74593a359e0d9d7f",
        "type": "grpc-server",
        "port": "8081",
        "name": "grpc-ain",
        "server": "192.168.0.100",
        "protoFile": "/**\n * AnalogIn service.\n *\n * Service that enables a control of the AnalogIn features of device\n */\nsyntax = \"proto3\";\n\npackage hal.analogin;\n\nimport \"google/protobuf/empty.proto\";\n\noption go_package = \"./protos;protos\";\n\nenum AnalogInMode {\n  Voltage = 0;\n  Current = 1;\n}\n\nenum AnalogInUnits {\n  V = 0;\n  mA = 1;\n}\n\nmessage AnalogInDevice {\n  string name = 1;\n  AnalogInMode mode = 2;\n}\n\n/**\n * Represents the ListDevice response data.\n */\nmessage AnalogInListDeviceResponse {\n  repeated AnalogInDevice devices = 1;\n}\n\n/**\n * Represents the Read request data.\n */\nmessage AnalogInReadRequest {\n  string name = 1;\n}\n\n/**\n * Represents the Read response data.\n */\nmessage AnalogInReadResponse {\n  uint32 adcRaw = 1;\n  float converted = 2;\n  AnalogInUnits unit = 3;\n}\n\n/**\n * Represents the SetMeasureMode request data.\n */\nmessage AnalogInSetMeasureModeRequest {\n  string name = 1;\n  AnalogInMode mode = 2;\n}\n\nmessage AnalogInAttachResponse {\n  string channel = 1;\n  string status = 2;\n  string timestamp = 3;\n}\n\n/**\n * Service exposing AnalogIn functions.\n */\nservice AnalogIN {\n  /// Used to retrieve all available analog input devices.\n  rpc ListDevices(google.protobuf.Empty) returns (AnalogInListDeviceResponse) {}\n\n  /// Used to read value of a particular analog input channel.\n  rpc Read(AnalogInReadRequest) returns (AnalogInReadResponse) {}\n  \n  /// Used to set measure mode of a particular analog input channel.\n  rpc SetMeasureMode(AnalogInSetMeasureModeRequest) returns (google.protobuf.Empty) {}\n\n  /// Used to monitor for overcurrent events\n  rpc Attach(google.protobuf.Empty) returns (stream AnalogInAttachResponse) {}\n}\n",
        "ca": "",
        "chain": "",
        "key": "",
        "mutualTls": false,
        "ssl": false,
        "selfsigned": false,
        "localServer": false
    }
]